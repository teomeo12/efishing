{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teodo\\\\Desktop\\\\aYEAR2\\\\semester2\\\\FullStack\\\\Projects\\\\efishing\\\\client\\\\src\\\\components\\\\DisplayAllProducts.js\";\nimport React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ProductTable from \"./ProductTable\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport ShoppingCart from \"./ShoopingCart\";\nimport SearchIcon from \"@material-ui/icons/Search\"; //import Product from \"./Product\";\n\nimport { // ACCESS_LEVEL_GUEST,\nACCESS_LEVEL_ADMIN, SERVER_HOST } from \"../config/global_constants\";\nexport default class DisplayAllProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSearch = searchTag => {\n      console.log(searchTag);\n      this.setState({\n        selectedProducts: this.state.products.filter(product => product.productName.toLowerCase().includes(searchTag.toLowerCase()) || product.productDescription.toLowerCase().includes(searchTag.toLowerCase()) || product.year.toLowerCase().includes(searchTag.toString()))\n      });\n    };\n\n    this.state = {\n      products: [],\n      selectedProducts: [],\n      releaseYears: [],\n      selectedYears: \"All Years\",\n      isRecords: true,\n      customersCount: 0,\n      users: [],\n      customers: [{\n        id: 1,\n        name: \"Scott\",\n        phone: \"234234\",\n        address: {\n          city: \"London\"\n        },\n        photo: \"https://picsum.photos/id/1010/60\"\n      }, {\n        id: 2,\n        name: \"Jones\",\n        phone: \"567567\",\n        address: {\n          city: \"Praga\"\n        },\n        photo: \"https://picsum.photos/id/1011/60\"\n      }, {\n        id: 3,\n        name: \"Smith\",\n        phone: null,\n        address: {\n          city: \"Sofia\"\n        },\n        photo: \"https://picsum.photos/id/1012/60\"\n      }, {\n        id: 4,\n        name: \"John\",\n        phone: \"3453466\",\n        address: {\n          city: \"Plovdiv\"\n        },\n        photo: \"https://picsum.photos/id/1013/60\"\n      }, {\n        id: 5,\n        name: \"Alan\",\n        phone: \"3453466\",\n        address: {\n          city: \"Castlebalyney\"\n        },\n        photo: \"https://picsum.photos/id/1014/60\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"\".concat(SERVER_HOST, \"/products\")).then(res => {\n      console.log(res.data);\n      /*Filter by Year*/\n\n      let releaseYears = res.data.map(product => product.year);\n      let uniqueYears = [...new Set(releaseYears)].sort();\n      uniqueYears.unshift(\"All Years\");\n      console.log(\"uniqueYears\");\n      /*Filter by Size*/\n\n      let labels = res.data.map(product => album.label);\n      let uniqueLabels = [...new Set(labels)].sort();\n      uniqueLabels.unshift(\"All Labels\");\n      console.log(\"uniqueLabels\");\n\n      if (res.data) {\n        if (res.data.errorMessage) {\n          console.log(res.data.errorMessage);\n        } else {\n          console.log(\"Records read\");\n          this.setState({\n            products: res.data,\n            selectedProducts: res.data,\n            releaseYears: uniqueYears,\n            sizes: uniqueSizes,\n            artists: uniqueArtists\n          });\n        }\n      } else {\n        console.log(\"Record not found\");\n      } // this.setState({ products: res.data });\n\n    }).catch(err => {// do nothing\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"header__search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"header__searchInput\",\n      type: \"text\",\n      placeholder: \"Search by prduct name or size...\",\n      id: \"search\",\n      onChange: () => this.handleSearch(document.getElementById(\"search\").value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(SearchIcon, {\n      className: \"header__searchIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), this.state.isRecords ? React.createElement(ProductTable, {\n      products: selectedProducts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      to: \"/NoRecordsToDisplay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }));\n  }\n\n} //  {\n//    localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\n//      <div className=\"logout\">\n//        {localStorage.profilePhoto !== \"null\" ? (\n//          <img\n//            id=\"profilePhoto\"\n//            src={`data:;base64,${localStorage.profilePhoto}`}\n//            alt=\"\"\n//          />\n//        ) : null}\n//        <Logout />\n//      </div>\n//    ) : (\n//      <div></div>\n//    );\n//  }\n//  <div className=\"table-container\">\n//    <CarTable cars={this.state.cars} />\n//    {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? (\n//      <div className=\"add-new-car\">\n//        <Link className=\"blue-button\" to={\"/AddCar\"}>\n//          Add New Car\n//        </Link>\n//      </div>\n//    ) : null}\n//  </div>;\n//Executes when user clicks on Refresh button\n// onRefreshClick = () => {\n//   this.setState({\n//     customersCount: 7,\n//   });\n// };\n// getPhoneToRender = (phone) => {\n//   if (phone) {\n//     return phone;\n//   } else {\n//     return <div className=\"bg-warning p-2 text-center\">No phone</div>;\n//   }\n// };\n// customerNameStyle = (custName) => {\n//   if (custName.startsWith(\"S\")) return \"green-highlight border-left\";\n//   else if (custName.startsWith(\"J\")) return \"red-highlight border-right\";\n//   else return { fontWeight: 600 };\n// };\n// //pnclick button receives customer object & index of the clicked customer\n// onChangePicClick = (cust, index) => {\n//   //get existing customer\n//   var custArray = this.state.customers;\n//   custArray[index].photo = \"https://picsum.photos/id/1016/60\";\n//   //update customer array\n//   this.setState({ customers: custArray });\n// };\n// getCustomerRow = () => {\n//   return this.state.customers.map((cust, index) => {\n//     return (\n//       <tr key={cust.id}>\n//         <td>{cust.id}</td>\n//         <td>\n//           <img src={cust.photo} alt=\"Customer\" />\n//           <div>\n//             <button\n//               className=\"btn btn-sm btn-secondary\"\n//               onClick={() => {\n//                 this.onChangePicClick(cust, index);\n//               }}\n//             >\n//               Change Pic\n//             </button>\n//           </div>\n//         </td>\n//         <td className={this.customerNameStyle(cust.name)}>{cust.name}</td>\n//         <td>{this.getPhoneToRender(cust.phone)}</td>\n//         <td>{cust.address.city}</td>\n//       </tr>\n//     );\n//   });\n// };\n\n{\n  /* <h4>{this.state.appTitle} </h4>\n       <span className=\"badge badge-secondary m-2\">\n         {this.state.customersCount}\n       </span>\n       <button className=\"btn btn-info\" onClick={() => this.onRefreshClick()}>\n         Refresh\n       </button> */\n}\n{\n  /* <table className=\"table\">\n         <thead>\n           <tr>\n             <th>id</th>\n             <th>Customer Name</th>\n             <th>Phone</th>\n             <th>City</th>\n           </tr>\n         </thead>\n         <tbody>{this.getCustomerRow()}</tbody>\n       </table> */\n}","map":{"version":3,"sources":["C:\\Users\\teodo\\Desktop\\aYEAR2\\semester2\\FullStack\\Projects\\efishing\\client\\src\\components\\DisplayAllProducts.js"],"names":["React","Component","Link","Redirect","axios","ProductTable","Header","Footer","ShoppingCart","SearchIcon","ACCESS_LEVEL_ADMIN","SERVER_HOST","DisplayAllProducts","constructor","props","handleSearch","searchTag","console","log","setState","selectedProducts","state","products","filter","product","productName","toLowerCase","includes","productDescription","year","toString","releaseYears","selectedYears","isRecords","customersCount","users","customers","id","name","phone","address","city","photo","componentDidMount","get","then","res","data","map","uniqueYears","Set","sort","unshift","labels","album","label","uniqueLabels","errorMessage","sizes","uniqueSizes","artists","uniqueArtists","catch","err","render","document","getElementById","value"],"mappings":"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KAAK9C,KAAL,CAAWY,SAAX,GACC,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEb,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAuBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EA+BE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BF,CADF;AAmCD;;AAhJuD,C,CAmJ1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEC;AACE;;;;;;;AAOD;AACD;AACE;;;;;;;;;;;AAWD","sourcesContent":["import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ProductTable from \"./ProductTable\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport ShoppingCart from \"./ShoopingCart\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n//import Product from \"./Product\";\nimport {\n  // ACCESS_LEVEL_GUEST,\n  ACCESS_LEVEL_ADMIN,\n  SERVER_HOST,\n} from \"../config/global_constants\";\n\nexport default class DisplayAllProducts extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      products: [],\n\n      selectedProducts: [],\n      releaseYears: [],\n      selectedYears: \"All Years\",\n      isRecords: true,\n      customersCount: 0,\n      users: [],\n      customers: [\n        {\n          id: 1,\n          name: \"Scott\",\n          phone: \"234234\",\n          address: { city: \"London\" },\n          photo: \"https://picsum.photos/id/1010/60\",\n        },\n        {\n          id: 2,\n          name: \"Jones\",\n          phone: \"567567\",\n          address: { city: \"Praga\" },\n          photo: \"https://picsum.photos/id/1011/60\",\n        },\n        {\n          id: 3,\n          name: \"Smith\",\n          phone: null,\n          address: { city: \"Sofia\" },\n          photo: \"https://picsum.photos/id/1012/60\",\n        },\n        {\n          id: 4,\n          name: \"John\",\n          phone: \"3453466\",\n          address: { city: \"Plovdiv\" },\n          photo: \"https://picsum.photos/id/1013/60\",\n        },\n        {\n          id: 5,\n          name: \"Alan\",\n          phone: \"3453466\",\n          address: { city: \"Castlebalyney\" },\n          photo: \"https://picsum.photos/id/1014/60\",\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    axios\n      .get(`${SERVER_HOST}/products`)\n      .then((res) => {\n        console.log(res.data);\n\n        /*Filter by Year*/\n\n        let releaseYears = res.data.map((product) => product.year);\n        let uniqueYears = [...new Set(releaseYears)].sort();\n        uniqueYears.unshift(\"All Years\");\n        console.log(\"uniqueYears\");\n        /*Filter by Size*/\n\n        let labels = res.data.map((product) => album.label);\n        let uniqueLabels = [...new Set(labels)].sort();\n        uniqueLabels.unshift(\"All Labels\");\n        console.log(\"uniqueLabels\");\n\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"Records read\");\n            this.setState({\n              products: res.data,\n              selectedProducts: res.data,\n              releaseYears: uniqueYears,\n              sizes: uniqueSizes,\n              artists: uniqueArtists,\n            });\n          }\n        } else {\n          console.log(\"Record not found\");\n        }\n        // this.setState({ products: res.data });\n      })\n      .catch((err) => {\n        // do nothing\n      });\n  }\n  handleSearch = (searchTag) => {\n    console.log(searchTag);\n    this.setState({\n      selectedProducts: this.state.products.filter(\n        (product) =>\n          product.productName.toLowerCase().includes(searchTag.toLowerCase()) ||\n          product.productDescription\n            .toLowerCase()\n            .includes(searchTag.toLowerCase()) ||\n          product.year.toLowerCase().includes(searchTag.toString())\n      ),\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n\n        <div className=\"header__search\">\n          <input\n            className=\"header__searchInput\"\n            type=\"text\"\n            placeholder=\"Search by prduct name or size...\"\n            id=\"search\"\n            onChange={() =>\n              this.handleSearch(document.getElementById(\"search\").value)\n            }\n          />\n          <SearchIcon className=\"header__searchIcon\" />\n        </div>\n\n        {this.state.isRecords ? (\n          <ProductTable products={selectedProducts} />\n        ) : (\n          <Redirect to=\"/NoRecordsToDisplay\" />\n        )}\n        {/* <ShoppingCart x=\"10\" /> */}\n\n        <div className=\"container1\">\n          {/* {this.state.isRecords ? (\n            <ProductTable products={this.state.products} />\n          ) : (\n            <Redirect to=\"/NoRecordsToDisplay\" />\n          )} */}\n        </div>\n\n        <Footer />\n      </>\n    );\n  }\n}\n\n//  {\n//    localStorage.accessLevel > ACCESS_LEVEL_GUEST ? (\n//      <div className=\"logout\">\n//        {localStorage.profilePhoto !== \"null\" ? (\n//          <img\n//            id=\"profilePhoto\"\n//            src={`data:;base64,${localStorage.profilePhoto}`}\n//            alt=\"\"\n//          />\n//        ) : null}\n//        <Logout />\n//      </div>\n//    ) : (\n//      <div></div>\n//    );\n//  }\n\n//  <div className=\"table-container\">\n//    <CarTable cars={this.state.cars} />\n\n//    {localStorage.accessLevel >= ACCESS_LEVEL_ADMIN ? (\n//      <div className=\"add-new-car\">\n//        <Link className=\"blue-button\" to={\"/AddCar\"}>\n//          Add New Car\n//        </Link>\n//      </div>\n//    ) : null}\n//  </div>;\n\n//Executes when user clicks on Refresh button\n// onRefreshClick = () => {\n//   this.setState({\n//     customersCount: 7,\n//   });\n// };\n// getPhoneToRender = (phone) => {\n//   if (phone) {\n//     return phone;\n//   } else {\n//     return <div className=\"bg-warning p-2 text-center\">No phone</div>;\n//   }\n// };\n\n// customerNameStyle = (custName) => {\n//   if (custName.startsWith(\"S\")) return \"green-highlight border-left\";\n//   else if (custName.startsWith(\"J\")) return \"red-highlight border-right\";\n//   else return { fontWeight: 600 };\n// };\n\n// //pnclick button receives customer object & index of the clicked customer\n// onChangePicClick = (cust, index) => {\n//   //get existing customer\n//   var custArray = this.state.customers;\n//   custArray[index].photo = \"https://picsum.photos/id/1016/60\";\n//   //update customer array\n//   this.setState({ customers: custArray });\n// };\n\n// getCustomerRow = () => {\n//   return this.state.customers.map((cust, index) => {\n//     return (\n//       <tr key={cust.id}>\n//         <td>{cust.id}</td>\n//         <td>\n//           <img src={cust.photo} alt=\"Customer\" />\n//           <div>\n//             <button\n//               className=\"btn btn-sm btn-secondary\"\n//               onClick={() => {\n//                 this.onChangePicClick(cust, index);\n//               }}\n//             >\n//               Change Pic\n//             </button>\n//           </div>\n//         </td>\n//         <td className={this.customerNameStyle(cust.name)}>{cust.name}</td>\n//         <td>{this.getPhoneToRender(cust.phone)}</td>\n//         <td>{cust.address.city}</td>\n//       </tr>\n//     );\n//   });\n// };\n\n {\n   /* <h4>{this.state.appTitle} </h4>\n        <span className=\"badge badge-secondary m-2\">\n          {this.state.customersCount}\n        </span>\n        <button className=\"btn btn-info\" onClick={() => this.onRefreshClick()}>\n          Refresh\n        </button> */\n }\n {\n   /* <table className=\"table\">\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>Customer Name</th>\n              <th>Phone</th>\n              <th>City</th>\n            </tr>\n          </thead>\n          <tbody>{this.getCustomerRow()}</tbody>\n        </table> */\n }"]},"metadata":{},"sourceType":"module"}